=== 0.0.17

* 2 minor enhancements:
  * Use nokogiri for XML/XSLT
  * Use 1.9-style switch statements

=== 0.0.16 2010-12-28

* 3 minor enhancements:
  * Template functions dedent their text.
  * Functions can be immediately followed by predicates
  * Actions defined in a library can have a f:select attribute now

=== 0.0.15 2010-12-09

* 1 minor enhancement:
  * Fixed bug causing <variable /> elements to ignore actions when no
    select attribute

=== 0.0.14 2010-12-09

* 1 major enhancement:
  * Added implementation classes for 'and' and 'or' in expressions

* 1 minor enhancement:
  * Fleshed out basic test environment to enable future unit testing

=== 0.0.13 2010-12-08

* 7 minor enhancements:
  * Fixed f:substring and f:starts-with?
  * Added f:random(n) to return a random integer in (1,n)
  * Fix escaping of single and double quotes in expressions
  * Fix where we look for non-inherited attributes in actions defined
    in a library
  * Fix handling of attributes that need to be passed through f:eval
  * Fix template interaction with libraries that don't have form elements
  * Fix recording of actions that act as connections to structural elements

=== 0.0.12 2010-12-03

* 1 major enhancement:
  * Added <template /> element to libraries

* 2 minor enhancements:
  * Fixed various XSLT issues with form markup
  * Fixed scope issue that caused <for-each /> failure with @as

=== 0.0.11 2010-11-11

* 1 bug fix
  * Type handling - minor corrections

=== 0.0.10
* 1 minor enhancement:
  * Form markup supports a selection type

* 1 bug fix
  * Find type methods correctly

=== 0.0.9

* 11 major enhancements:
  * Form markup is now namespaced and limited to the structural elements
    (form, container, group, option) and interactive elements (asset,
    selection, password, submission, text)
  * Tuples in expressions are now [...] instead of ([...])
  * Tag libraries can now specify an XSLT for transforming to HTML to
    add presentation capabilities
  * Tag libraries can specify which presentation elements in their
    namespace should get default data from the application memory
  * Tag libraries can specify which presentation elements participate
    in the path construction for default data, caption, and error
    markup
  * Type conversions now are passed a context with the root node being
    converted
  * f:uri converts strings using namespace prefixes based on the namespace
    context of the string instead of the namespace context of the function
    call
  * appended '?' to the following functions: f:first, f:last, f:ends-with,
    f:empty, f:exists, f:only-one, f:one-or-more, and f:zero-or-one
  * added f:first(list), f:last(list), f:all-but-first(list), and
    f:all-but-last(list) for working with sequences
  * added basic Type object to manage conversions and type information
  * library actions can refer to other actions defined in the same library

1 minor enhancement
  * Type converters are now mappings

=== 0.0.8 2010-09-11

* 1 major enhancement:
  * Extensions can now define structural elements to be contained within
    other structural elements outside the extension.  See the grammar
    extension for an example of it allowing the grammar element within
    the library top-level element.

=== 0.0.7 2010-09-07

* 5 major enhancement:
  * Structural elements are easier to code - similar to actions
  * Fabulator::ActionLib is now Fabulator::TagLib to reflect the more
    generic nature of the libraries
  * More robust Structural and Action base classes
  * Added '?' as a suffix character for expression function names
    A function with a name ending in '?' will have its return values
    automatically converted to boolean
  * Default run-time behavior for Action classes is to run any embedded 
    actions

* 5 minor enhancement:
  * Fabulator now depends on the active_support gem
  * Inheritance is not fully supported, so removing until later
  * Simpler access to attributes that require evaluation
  * Simpler access to f:select values and actions
  * Beginning support for libraries written in XML (testing only for now)

=== 0.0.6 2010-08-27

* 4 minor enhancement:
  * Better regex for matching quoted strings in expressions
  * Less duplication of compile-time contexts
  * Template add_caption call can take a hash or a node context
  * set_value can take a node as a source instead of only an expression

=== 0.0.5 2010-08-18

* 2 major enhancements:
  * unified predicate execution so numeric indexes and boolean logic
    work based on run-time evaluation results
  * position(), first(), and last() should work in predicates
  * correctly escape default values

=== 0.0.4 2010-08-16

* 5 minor enhancements:
  * Add RedCloth gem dependence to gem spec
  * f:string-length() returns 0 for nil values
  * f:dump() now shows attributes
  * compile-time context tree tracks line numbers of associated XML elements
  * minor bug fixes in template tags
  * tempate form XML element 'file' is now 'asset'

* 1 major enhancement:
  * add_default_values() should now work for parsed templates
  * to_html() can now return form contents only
  * parsed templates will be returned as a string if they are not 

=== 0.0.3 2010-08-10

* 1 minor enhancement:
  * Add libxslt-ruby gem dependence to gem spec

=== 0.0.2 2010-08-10

* 3 major enhancements:
  * Introduce '*' suffix to indicate a consolidation of a reduction
  * Reduction functions can now have a corresponding consolidation
    function.  The reduction will be a fallback for an undefined
    consolidation.
  * Use LibXSLT to apply template to html transform (requires the
    libxslt-ruby gem)

=== 0.0.1 2010-02-23

* 1 major enhancement:
  * Initial release

